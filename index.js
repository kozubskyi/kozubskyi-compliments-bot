const TelegramBot = require("node-telegram-bot-api")
let compliments = require("./data")

require("dotenv").config()

const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true })

bot.setMyCommands([
  { command: "/start", description: "–ù–∞—á–∞—Ç—å" },
  { command: "/compliment", description: "–ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫" },
])

// üëá –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.on("message", (msg) => {
  makeResponse({
    username: msg.from.username,
    command: msg.text,
    chatId: msg.chat.id,
  })
})

// üëá –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É (–µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å)
bot.on("callback_query", (cb) => {
  makeResponse({
    username: cb.from.username,
    command: cb.data,
    chatId: cb.message.chat.id,
  })
})

async function makeResponse({ username, command, chatId }) {
  try {
    let response = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –í—ã –Ω–µ –ï–ª–µ–Ω–∞ –†–∞–∫, –∞ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫–∏ —è –¥–µ–ª–∞—é —Ç–æ–ª—å–∫–æ –µ–π ü§∑‚Äç‚ôÇÔ∏è"
    let buttonOptions = {}

    if (username === "lena_rak_05") {
      if (command === "/start") {
        response =
          "–õ–µ–Ω—É—Å–∏–∫, –ø—Ä–∏–≤–µ—Ç–∏–∫) üòò –î–µ–Ω–∏—Å –ø—Ä–æ—Å–∏–ª –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–µ–±–µ –∫—É—á—É –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫–æ–≤. –ù–∞–ø–∏—à–∏ –∏–ª–∏ –Ω–∞–∂–º–∏ /compliment –∏ –ø–æ–ª—É—á–∏—à—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫)"
        // buttonOptions = {
        //   reply_markup: JSON.stringify({
        //     inline_keyboard: [[{ text: "–ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫", callback_data: "/compliment" }]],
        //   }),
        // }
      } else if (command === "/compliment") {
        const randomIndex = Math.floor(Math.random() * compliments.length)
        response = compliments[randomIndex]
        // buttonOptions = {
        //   reply_markup: JSON.stringify({
        //     inline_keyboard: [[{ text: "–ü–æ–ª—É—á–∏—Ç—å –µ—â–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫", callback_data: "/compliment" }]],
        //   }),
        // }
      } else {
        response = "–õ–µ–Ω—É—Å–∏–∫, —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç) –ü–æ–∫–∞ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã /start –∏ /compliment"
      }
    }

    if (username === "kozubskyi") {
      const adminCommand = command.slice(0, 3)
      const newData = command.slice(4)

      if (adminCommand === "add") {
        compliments.push(newData)
        response = "–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω"
      } else if (adminCommand === "del") {
        compliments = compliments.filter((compliment) => compliment !== newData)
        response = "–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"
      } else if (adminCommand === "ccd") {
        compliments = JSON.parse(newData)
      } else if (command === "/all") {
        response = JSON.stringify(compliments)
      } else {
        response = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞"
      }
    }

    await bot.sendMessage(chatId, response, buttonOptions)

    bot.sendMessage(
      397376590,
      `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '${username}' –æ—Ç–ø—Ä–∞–≤–∏–ª(-–∞) —Å–æ–æ–±—â–µ–Ω–∏–µ '${command}' –∏ –ø–æ–ª—É—á–∏–ª(-–∞) –æ—Ç–≤–µ—Ç '${response}'`
    )
  } catch (error) {
    bot.sendMessage(
      397376590,
      `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '${username}' –æ—Ç–ø—Ä–∞–≤–∏–ª(-–∞) —Å–æ–æ–±—â–µ–Ω–∏–µ '${command}' –∏ –ø–æ–ª—É—á–∏–ª–∞—Å—å –æ—à–∏–±–∫–∞ '${error.message}'`
    )
  }
}

